/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.CityController;
import static Controllers.CityController.printResults;
import static Controllers.CityController.setNumberOfCities;
import Models.City;
import static delivery.routing.app.DeliveryRoutingApp.cityGraph;
import Models.Graph;
import java.util.List;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hirusha
 */
public class MainFrame extends javax.swing.JFrame {
    DefaultTableModel cityTable;
    DefaultTableModel cityDistancesTable;
    int numberOfCities = 0;

    public MainFrame() {
        initComponents();
        appConfig();
        cityTable = (DefaultTableModel) tblCities.getModel();
    }
    
    public void appConfig(){
        cityDistancesTable = (DefaultTableModel) tblCityDistances.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnCalculateResults = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResults = new javax.swing.JTextArea();
        btnClearResults = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCityDistances = new javax.swing.JTable();
        btnAddNewLocation = new javax.swing.JButton();
        btnDeleteLocation = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnAddCity = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCities = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        spnNumberOfCities = new javax.swing.JSpinner();
        btnSaveNumberOfCities = new javax.swing.JButton();
        lblNumberOfCities = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delivery Routing App");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter locations and distances between them"));

        btnCalculateResults.setText("Calculate Results");
        btnCalculateResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateResultsActionPerformed(evt);
            }
        });

        jLabel3.setText("Results");

        txtResults.setEditable(false);
        txtResults.setColumns(20);
        txtResults.setRows(5);
        jScrollPane2.setViewportView(txtResults);

        btnClearResults.setText("Clear Results");
        btnClearResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearResultsActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Distances"));

        tblCityDistances.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City A", "City B", "Distance"
            }
        ));
        tblCityDistances.setColumnSelectionAllowed(true);
        tblCityDistances.getTableHeader().setReorderingAllowed(false);
        tblCityDistances.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblCityDistancesComponentAdded(evt);
            }
        });
        tblCityDistances.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblCityDistancesAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblCityDistances.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCityDistancesPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblCityDistances);
        tblCityDistances.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblCityDistances.getColumnModel().getColumnCount() > 0) {
            tblCityDistances.getColumnModel().getColumn(0).setResizable(false);
            tblCityDistances.getColumnModel().getColumn(1).setResizable(false);
            tblCityDistances.getColumnModel().getColumn(1).setHeaderValue("City B");
            tblCityDistances.getColumnModel().getColumn(2).setResizable(false);
            tblCityDistances.getColumnModel().getColumn(2).setHeaderValue("Distance");
        }

        btnAddNewLocation.setText("Add New Road");
        btnAddNewLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewLocationActionPerformed(evt);
            }
        });

        btnDeleteLocation.setText("Delete");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddNewLocation)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNewLocation)
                    .addComponent(btnDeleteLocation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cities"));

        btnAddCity.setText("Add New City");
        btnAddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityActionPerformed(evt);
            }
        });

        jLabel4.setText("City Name:");

        tblCities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City Name"
            }
        ));
        tblCities.getTableHeader().setReorderingAllowed(false);
        tblCities.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblCitiesComponentAdded(evt);
            }
        });
        tblCities.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblCitiesAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblCities.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCitiesPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(tblCities);
        tblCities.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblCities.getColumnModel().getColumnCount() > 0) {
            tblCities.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCityName))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAddCity)
                        .addGap(0, 164, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddCity)
                .addContainerGap())
        );

        jLabel5.setText("Enter the number of cities you need to add:");

        btnSaveNumberOfCities.setText("Save");
        btnSaveNumberOfCities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNumberOfCitiesActionPerformed(evt);
            }
        });

        lblNumberOfCities.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNumberOfCities.setText("Number of cities:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCalculateResults)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearResults))
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(spnNumberOfCities, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSaveNumberOfCities)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNumberOfCities)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spnNumberOfCities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveNumberOfCities)
                    .addComponent(lblNumberOfCities))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalculateResults)
                    .addComponent(btnClearResults))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewLocationActionPerformed
        if(cityTable.getRowCount() != numberOfCities){
            System.out.println(cityTable.getRowCount());
            JOptionPane.showMessageDialog(null, "Please add " + numberOfCities + " cities.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        new AddNewLocation(cityDistancesTable).setVisible(true);
    }//GEN-LAST:event_btnAddNewLocationActionPerformed

    private void tblCityDistancesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblCityDistancesAncestorAdded
        
    }//GEN-LAST:event_tblCityDistancesAncestorAdded

    private void tblCityDistancesComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblCityDistancesComponentAdded
        
    }//GEN-LAST:event_tblCityDistancesComponentAdded

    private void tblCityDistancesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCityDistancesPropertyChange
        System.out.println("table row added");
    }//GEN-LAST:event_tblCityDistancesPropertyChange

    private void btnCalculateResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateResultsActionPerformed
        
        if(cityTable.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "No cities added");
            return;
        }
        
        if(cityDistancesTable.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "No city distances added");
            return;
        }
        
        //printResults();
        
        ArrayList<String> results = printResults();
        
        txtResults.setText("Sortest route is: " + results.toString());
        
        
        
    }//GEN-LAST:event_btnCalculateResultsActionPerformed

    private void btnClearResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearResultsActionPerformed
        txtResults.setText("");
    }//GEN-LAST:event_btnClearResultsActionPerformed

    private void btnAddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityActionPerformed
        
        
        String cityName = txtCityName.getText();
        
        if (cityName.isEmpty()){
            JOptionPane.showMessageDialog(null, "City name cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (numberOfCities == 0){
            JOptionPane.showMessageDialog(null, "Please enter number of cities you need to add", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (cityTable.getRowCount() >= numberOfCities){
            JOptionPane.showMessageDialog(null, "You can only add " + numberOfCities + " cities", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
      
        City city = new City(cityName);
        
        CityController.addCity(city);
        cityTable.addRow(new Object[]{cityName});
        JOptionPane.showMessageDialog(null, "City inserted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        txtCityName.setText("");
        
    }//GEN-LAST:event_btnAddCityActionPerformed

    private void tblCitiesComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblCitiesComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCitiesComponentAdded

    private void tblCitiesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblCitiesAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCitiesAncestorAdded

    private void tblCitiesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCitiesPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCitiesPropertyChange

    private void btnSaveNumberOfCitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNumberOfCitiesActionPerformed
        numberOfCities = (int) spnNumberOfCities.getValue();
        
        if (numberOfCities == 0){
            JOptionPane.showMessageDialog(null, "Please enter the number of cities you need to add.");
            return;
        }
        
        setNumberOfCities(numberOfCities);
        lblNumberOfCities.setText("Number of cities: " + numberOfCities);
        btnSaveNumberOfCities.setEnabled(false);
        spnNumberOfCities.setEnabled(false);
        
        
    }//GEN-LAST:event_btnSaveNumberOfCitiesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCity;
    private javax.swing.JButton btnAddNewLocation;
    private javax.swing.JButton btnCalculateResults;
    private javax.swing.JButton btnClearResults;
    private javax.swing.JButton btnDeleteLocation;
    private javax.swing.JButton btnSaveNumberOfCities;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblNumberOfCities;
    private javax.swing.JSpinner spnNumberOfCities;
    private javax.swing.JTable tblCities;
    private javax.swing.JTable tblCityDistances;
    private javax.swing.JTextField txtCityName;
    private javax.swing.JTextArea txtResults;
    // End of variables declaration//GEN-END:variables
}
